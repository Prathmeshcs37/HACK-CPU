/********************************************************************************
 * 
 * Used in CarryBits
 *
 * Function :
 * Generates carry bits using Pi and Gi
 *
 *******************************************************************************/
 
CHIP CarryGenerate
{
    IN P[4],G[4],c0;
    OUT c1,c2,c3,c4;

    PARTS: 

    // c1 = P0.C0 + G0
    And(a=P[0], b=c0, out=c1t1);
    Or(a=G[0], b=c1t1, out=c1);

    // c2 = P1.P0.C0 + P1.G0 + G1
    And4to1(a=P[0], b=P[1], c=true, d=c0, out=c2t1);
    And(a=P[1], b=G[0], out=c2t2);
    Or4to1(a=c2t1, b=c2t2, c=G[1], d=false, out=c2);

    // c3 = P2.P1.P0.C0 + P2.P1.G0 + P2.G1 + G2
    And4to1(a=P[2], b=P[1], c=P[0], d=c0, out=c3t1);
    GenerateTerm(P[0..1]=P[1..2], P[2]=true, G[3]=false, G[0..2]=G[0..2], out=c3t2);
    Or(a=c3t1, b=c3t2, out=c3);

    // c4 = P3.P2.P1.P0.C0 + P3.P2.P1.G0 + P3.P2.G1 + P3.G2 + G3
    And4to1(a=P[0], b=P[1], c=P[2], d=P[3], out=c4t1);
    And(a=c4t1, b=c0, out=c4t2);
    GenerateTerm(P=P[1..3], G=G[0..3], out=c4t3);
    Or(a=c4t2, b=c4t3, out=c4);
}